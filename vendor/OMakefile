#if $(not $(defined-env VERBOSE))
#  OMakeFlags(-S --progress)
#  export

if $(or $(equal $(OSTYPE), Win32), $(equal $(OSTYPE), WindowsNT))
  CXXFLAGS += -EHsc -W3 -wd4800 -wd4819 -wd4996 -U__STRICT_ANSI__ /J $(if $(defined-env DEBUG), -Od, -O2) -I./ -I../ -I../../ $(shell freetype-config --cflags) $(shell sdl-config --cflags) $(PLATFORMFLAGS) -D_THREAD_SAFE
  export
else
  CXXFLAGS = --ansi -U__STRICT_ANSI__ -funsigned-char $(if $(defined-env DEBUG), -g, -O2) -I./ -I../ -I../../ $(shell freetype-config --cflags) $(shell sdl-config --cflags) $(PLATFORMFLAGS) -D_THREAD_SAFE
  export


CFLAGS = $(CXXFLAGS)

# for testing
#CXXFLAGS += -DWIN32

.PHONY: clean

########

LRLFILES[] =
  glew
  file
  endian
  wavfile
  nwatowav
  alphablit
  SDL_ttf

StaticCObject(libVendorLibs, $(LRLFILES))

# Build jagarl's standalone nwatowav binary.
section 
  NWAFILES[] =
    endian
    nwatowav-main

  nwatowav-main.o: nwatowav.cc
    $(CXX) $(CXXFLAGS) $(PREFIXED_INCLUDES) -DUSE_MAIN -c $(CCOUT)$@ $<

  CXXProgram(nwatowav, $(NWAFILES))

########

LIBS += -L/opt/local/lib
.SUBDIRS: 
.DEFAULT: libVendorLibs$(EXT_OBJ)


clean:
  $(RM) *.o *.gch *$(EXT_LIB) nwatowav *.omc
